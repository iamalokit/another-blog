<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iamalokit.anotherblog.mapper.BlogMapper">
  <resultMap id="BaseResultMap" type="com.iamalokit.anotherblog.entity.Blog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="blog_title" jdbcType="VARCHAR" property="blogTitle" />
    <result column="blog_sub_url" jdbcType="VARCHAR" property="blogSubUrl" />
    <result column="blog_cover_image" jdbcType="VARCHAR" property="blogCoverImage" />
    <result column="blog_category_id" jdbcType="BIGINT" property="blogCategoryId" />
    <result column="blog_category_name" jdbcType="VARCHAR" property="blogCategoryName" />
    <result column="blog_tags" jdbcType="VARCHAR" property="blogTags" />
    <result column="blog_status" jdbcType="TINYINT" property="blogStatus" />
    <result column="blog_views" jdbcType="BIGINT" property="blogViews" />
    <result column="enable_comment" jdbcType="TINYINT" property="enableComment" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.iamalokit.anotherblog.entity.Blog">
    <result column="blog_content" jdbcType="LONGVARCHAR" property="blogContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, blog_title, blog_sub_url, blog_cover_image, blog_category_id, blog_category_name, 
    blog_tags, blog_status, blog_views, enable_comment, is_deleted, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    blog_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.iamalokit.anotherblog.entity.BlogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.iamalokit.anotherblog.entity.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.iamalokit.anotherblog.entity.BlogExample">
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iamalokit.anotherblog.entity.Blog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into blog (blog_title, blog_sub_url, blog_cover_image, 
      blog_category_id, blog_category_name, blog_tags, 
      blog_status, blog_views, enable_comment, 
      is_deleted, create_time, update_time, 
      blog_content)
    values (#{blogTitle,jdbcType=VARCHAR}, #{blogSubUrl,jdbcType=VARCHAR}, #{blogCoverImage,jdbcType=VARCHAR}, 
      #{blogCategoryId,jdbcType=BIGINT}, #{blogCategoryName,jdbcType=VARCHAR}, #{blogTags,jdbcType=VARCHAR}, 
      #{blogStatus,jdbcType=TINYINT}, #{blogViews,jdbcType=BIGINT}, #{enableComment,jdbcType=TINYINT}, 
      #{isDeleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{blogContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.iamalokit.anotherblog.entity.Blog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogTitle != null">
        blog_title,
      </if>
      <if test="blogSubUrl != null">
        blog_sub_url,
      </if>
      <if test="blogCoverImage != null">
        blog_cover_image,
      </if>
      <if test="blogCategoryId != null">
        blog_category_id,
      </if>
      <if test="blogCategoryName != null">
        blog_category_name,
      </if>
      <if test="blogTags != null">
        blog_tags,
      </if>
      <if test="blogStatus != null">
        blog_status,
      </if>
      <if test="blogViews != null">
        blog_views,
      </if>
      <if test="enableComment != null">
        enable_comment,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="blogContent != null">
        blog_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogTitle != null">
        #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogSubUrl != null">
        #{blogSubUrl,jdbcType=VARCHAR},
      </if>
      <if test="blogCoverImage != null">
        #{blogCoverImage,jdbcType=VARCHAR},
      </if>
      <if test="blogCategoryId != null">
        #{blogCategoryId,jdbcType=BIGINT},
      </if>
      <if test="blogCategoryName != null">
        #{blogCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="blogTags != null">
        #{blogTags,jdbcType=VARCHAR},
      </if>
      <if test="blogStatus != null">
        #{blogStatus,jdbcType=TINYINT},
      </if>
      <if test="blogViews != null">
        #{blogViews,jdbcType=BIGINT},
      </if>
      <if test="enableComment != null">
        #{enableComment,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blogContent != null">
        #{blogContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iamalokit.anotherblog.entity.BlogExample" resultType="java.lang.Long">
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.blogTitle != null">
        blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.blogSubUrl != null">
        blog_sub_url = #{record.blogSubUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.blogCoverImage != null">
        blog_cover_image = #{record.blogCoverImage,jdbcType=VARCHAR},
      </if>
      <if test="record.blogCategoryId != null">
        blog_category_id = #{record.blogCategoryId,jdbcType=BIGINT},
      </if>
      <if test="record.blogCategoryName != null">
        blog_category_name = #{record.blogCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.blogTags != null">
        blog_tags = #{record.blogTags,jdbcType=VARCHAR},
      </if>
      <if test="record.blogStatus != null">
        blog_status = #{record.blogStatus,jdbcType=TINYINT},
      </if>
      <if test="record.blogViews != null">
        blog_views = #{record.blogViews,jdbcType=BIGINT},
      </if>
      <if test="record.enableComment != null">
        enable_comment = #{record.enableComment,jdbcType=TINYINT},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.blogContent != null">
        blog_content = #{record.blogContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update blog
    set id = #{record.id,jdbcType=BIGINT},
      blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      blog_sub_url = #{record.blogSubUrl,jdbcType=VARCHAR},
      blog_cover_image = #{record.blogCoverImage,jdbcType=VARCHAR},
      blog_category_id = #{record.blogCategoryId,jdbcType=BIGINT},
      blog_category_name = #{record.blogCategoryName,jdbcType=VARCHAR},
      blog_tags = #{record.blogTags,jdbcType=VARCHAR},
      blog_status = #{record.blogStatus,jdbcType=TINYINT},
      blog_views = #{record.blogViews,jdbcType=BIGINT},
      enable_comment = #{record.enableComment,jdbcType=TINYINT},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      blog_content = #{record.blogContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog
    set id = #{record.id,jdbcType=BIGINT},
      blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      blog_sub_url = #{record.blogSubUrl,jdbcType=VARCHAR},
      blog_cover_image = #{record.blogCoverImage,jdbcType=VARCHAR},
      blog_category_id = #{record.blogCategoryId,jdbcType=BIGINT},
      blog_category_name = #{record.blogCategoryName,jdbcType=VARCHAR},
      blog_tags = #{record.blogTags,jdbcType=VARCHAR},
      blog_status = #{record.blogStatus,jdbcType=TINYINT},
      blog_views = #{record.blogViews,jdbcType=BIGINT},
      enable_comment = #{record.enableComment,jdbcType=TINYINT},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iamalokit.anotherblog.entity.Blog">
    update blog
    <set>
      <if test="blogTitle != null">
        blog_title = #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogSubUrl != null">
        blog_sub_url = #{blogSubUrl,jdbcType=VARCHAR},
      </if>
      <if test="blogCoverImage != null">
        blog_cover_image = #{blogCoverImage,jdbcType=VARCHAR},
      </if>
      <if test="blogCategoryId != null">
        blog_category_id = #{blogCategoryId,jdbcType=BIGINT},
      </if>
      <if test="blogCategoryName != null">
        blog_category_name = #{blogCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="blogTags != null">
        blog_tags = #{blogTags,jdbcType=VARCHAR},
      </if>
      <if test="blogStatus != null">
        blog_status = #{blogStatus,jdbcType=TINYINT},
      </if>
      <if test="blogViews != null">
        blog_views = #{blogViews,jdbcType=BIGINT},
      </if>
      <if test="enableComment != null">
        enable_comment = #{enableComment,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blogContent != null">
        blog_content = #{blogContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.iamalokit.anotherblog.entity.Blog">
    update blog
    set blog_title = #{blogTitle,jdbcType=VARCHAR},
      blog_sub_url = #{blogSubUrl,jdbcType=VARCHAR},
      blog_cover_image = #{blogCoverImage,jdbcType=VARCHAR},
      blog_category_id = #{blogCategoryId,jdbcType=BIGINT},
      blog_category_name = #{blogCategoryName,jdbcType=VARCHAR},
      blog_tags = #{blogTags,jdbcType=VARCHAR},
      blog_status = #{blogStatus,jdbcType=TINYINT},
      blog_views = #{blogViews,jdbcType=BIGINT},
      enable_comment = #{enableComment,jdbcType=TINYINT},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      blog_content = #{blogContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iamalokit.anotherblog.entity.Blog">
    update blog
    set blog_title = #{blogTitle,jdbcType=VARCHAR},
      blog_sub_url = #{blogSubUrl,jdbcType=VARCHAR},
      blog_cover_image = #{blogCoverImage,jdbcType=VARCHAR},
      blog_category_id = #{blogCategoryId,jdbcType=BIGINT},
      blog_category_name = #{blogCategoryName,jdbcType=VARCHAR},
      blog_tags = #{blogTags,jdbcType=VARCHAR},
      blog_status = #{blogStatus,jdbcType=TINYINT},
      blog_views = #{blogViews,jdbcType=BIGINT},
      enable_comment = #{enableComment,jdbcType=TINYINT},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>